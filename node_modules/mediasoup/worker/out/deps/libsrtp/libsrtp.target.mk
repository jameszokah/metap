# This file is generated by gyp; do not edit.

TOOLSET := target
TARGET := libsrtp
DEFS_Debug := \
	'-DHAVE_CONFIG_H' \
	'-DHAVE_STDLIB_H' \
	'-DHAVE_STRING_H' \
	'-DHAVE_STDINT_H' \
	'-DHAVE_INTTYPES_H' \
	'-DHAVE_INT8_T' \
	'-DHAVE_INT16_T' \
	'-DHAVE_INT32_T' \
	'-DHAVE_UINT8_T' \
	'-DHAVE_UINT16_T' \
	'-DHAVE_UINT32_T' \
	'-DHAVE_UINT64_T' \
	'-DOPENSSL' \
	'-DGCM' \
	'-DHAVE_ARPA_INET_H' \
	'-DHAVE_NETINET_IN_H' \
	'-DHAVE_SYS_TYPES_H' \
	'-DHAVE_UNISTD_H' \
	'-DCPU_CISC' \
	'-DDEBUG' \
	'-DMS_LOG_TRACE' \
	'-DMS_LOG_FILE_LINE'

# Flags passed to all source files.
CFLAGS_Debug := \
	-Wall \
	-Wno-unused-variable \
	-Wno-sign-compare \
	-m64 \
	-g \
	-O0 \
	-Wno-parentheses-equality \
	-Wno-unknown-warning-option \
	-fPIC

# Flags passed to only C files.
CFLAGS_C_Debug :=

# Flags passed to only C++ files.
CFLAGS_CC_Debug :=

INCS_Debug := \
	-I$(srcdir)/deps/libsrtp/config \
	-I$(srcdir)/deps/libsrtp/srtp/include \
	-I$(srcdir)/deps/libsrtp/srtp/crypto/include \
	-I$(srcdir)/deps/openssl/openssl/include

DEFS_Release := \
	'-DHAVE_CONFIG_H' \
	'-DHAVE_STDLIB_H' \
	'-DHAVE_STRING_H' \
	'-DHAVE_STDINT_H' \
	'-DHAVE_INTTYPES_H' \
	'-DHAVE_INT8_T' \
	'-DHAVE_INT16_T' \
	'-DHAVE_INT32_T' \
	'-DHAVE_UINT8_T' \
	'-DHAVE_UINT16_T' \
	'-DHAVE_UINT32_T' \
	'-DHAVE_UINT64_T' \
	'-DOPENSSL' \
	'-DGCM' \
	'-DHAVE_ARPA_INET_H' \
	'-DHAVE_NETINET_IN_H' \
	'-DHAVE_SYS_TYPES_H' \
	'-DHAVE_UNISTD_H' \
	'-DCPU_CISC'

# Flags passed to all source files.
CFLAGS_Release := \
	-Wall \
	-Wno-unused-variable \
	-Wno-sign-compare \
	-m64 \
	-g \
	-Wno-unknown-warning-option \
	-fPIC

# Flags passed to only C files.
CFLAGS_C_Release :=

# Flags passed to only C++ files.
CFLAGS_CC_Release :=

INCS_Release := \
	-I$(srcdir)/deps/libsrtp/config \
	-I$(srcdir)/deps/libsrtp/srtp/include \
	-I$(srcdir)/deps/libsrtp/srtp/crypto/include \
	-I$(srcdir)/deps/openssl/openssl/include

OBJS := \
	$(obj).target/$(TARGET)/deps/libsrtp/srtp/srtp/ekt.o \
	$(obj).target/$(TARGET)/deps/libsrtp/srtp/srtp/srtp.o \
	$(obj).target/$(TARGET)/deps/libsrtp/srtp/crypto/cipher/aes.o \
	$(obj).target/$(TARGET)/deps/libsrtp/srtp/crypto/cipher/cipher.o \
	$(obj).target/$(TARGET)/deps/libsrtp/srtp/crypto/cipher/null_cipher.o \
	$(obj).target/$(TARGET)/deps/libsrtp/srtp/crypto/hash/auth.o \
	$(obj).target/$(TARGET)/deps/libsrtp/srtp/crypto/hash/null_auth.o \
	$(obj).target/$(TARGET)/deps/libsrtp/srtp/crypto/kernel/alloc.o \
	$(obj).target/$(TARGET)/deps/libsrtp/srtp/crypto/kernel/crypto_kernel.o \
	$(obj).target/$(TARGET)/deps/libsrtp/srtp/crypto/kernel/err.o \
	$(obj).target/$(TARGET)/deps/libsrtp/srtp/crypto/kernel/key.o \
	$(obj).target/$(TARGET)/deps/libsrtp/srtp/crypto/math/datatypes.o \
	$(obj).target/$(TARGET)/deps/libsrtp/srtp/crypto/math/stat.o \
	$(obj).target/$(TARGET)/deps/libsrtp/srtp/crypto/replay/rdb.o \
	$(obj).target/$(TARGET)/deps/libsrtp/srtp/crypto/replay/rdbx.o \
	$(obj).target/$(TARGET)/deps/libsrtp/srtp/crypto/replay/ut_sim.o \
	$(obj).target/$(TARGET)/deps/libsrtp/srtp/crypto/cipher/aes_gcm_ossl.o \
	$(obj).target/$(TARGET)/deps/libsrtp/srtp/crypto/cipher/aes_icm_ossl.o \
	$(obj).target/$(TARGET)/deps/libsrtp/srtp/crypto/hash/hmac_ossl.o

# Add to the list of files we specially track dependencies for.
all_deps += $(OBJS)

# CFLAGS et al overrides must be target-local.
# See "Target-specific Variable Values" in the GNU Make manual.
$(OBJS): TOOLSET := $(TOOLSET)
$(OBJS): GYP_CFLAGS := $(DEFS_$(BUILDTYPE)) $(INCS_$(BUILDTYPE))  $(CFLAGS_$(BUILDTYPE)) $(CFLAGS_C_$(BUILDTYPE))
$(OBJS): GYP_CXXFLAGS := $(DEFS_$(BUILDTYPE)) $(INCS_$(BUILDTYPE))  $(CFLAGS_$(BUILDTYPE)) $(CFLAGS_CC_$(BUILDTYPE))

# Suffix rules, putting all outputs into $(obj).

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(srcdir)/%.c FORCE_DO_CMD
	@$(call do_cmd,cc,1)

# Try building from generated source, too.

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(obj).$(TOOLSET)/%.c FORCE_DO_CMD
	@$(call do_cmd,cc,1)

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(obj)/%.c FORCE_DO_CMD
	@$(call do_cmd,cc,1)

# End of this set of suffix rules
### Rules for final target.
LDFLAGS_Debug := \
	-m64

LDFLAGS_Release := \
	-m64

LIBS :=

$(obj).target/deps/libsrtp/libsrtp.a: GYP_LDFLAGS := $(LDFLAGS_$(BUILDTYPE))
$(obj).target/deps/libsrtp/libsrtp.a: LIBS := $(LIBS)
$(obj).target/deps/libsrtp/libsrtp.a: TOOLSET := $(TOOLSET)
$(obj).target/deps/libsrtp/libsrtp.a: $(OBJS) FORCE_DO_CMD
	$(call do_cmd,alink)

all_deps += $(obj).target/deps/libsrtp/libsrtp.a
# Add target alias
.PHONY: libsrtp
libsrtp: $(obj).target/deps/libsrtp/libsrtp.a

# Add target alias to "all" target.
.PHONY: all
all: libsrtp

# Add target alias
.PHONY: libsrtp
libsrtp: $(builddir)/libsrtp.a

# Copy this to the static library output path.
$(builddir)/libsrtp.a: TOOLSET := $(TOOLSET)
$(builddir)/libsrtp.a: $(obj).target/deps/libsrtp/libsrtp.a FORCE_DO_CMD
	$(call do_cmd,copy)

all_deps += $(builddir)/libsrtp.a
# Short alias for building this static library.
.PHONY: libsrtp.a
libsrtp.a: $(obj).target/deps/libsrtp/libsrtp.a $(builddir)/libsrtp.a

# Add static library to "all" target.
.PHONY: all
all: $(builddir)/libsrtp.a

